version: "3.8"

networks:
    reviews-test:

services:
    postgres-integration:
        image: postgres
        container_name: coursecompose_db_integration
        environment:
            POSTGRES_DB: coursecompose-integration
            POSTGRES_USER: syntax
            POSTGRES_PASSWORD: stamford
        volumes:
            - ./review/data/datasource/db/generated.sql:/docker-entrypoint-initdb.d/generated.sql
            - ./review/data/datasource/db/seed.sql:/docker-entrypoint-initdb.d/seed.sql
        healthcheck:
            test: ["CMD-SHELL", "pg_isready"]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - reviews-test

    zookeeper-integration:
        image: confluentinc/cp-zookeeper
        restart: unless-stopped
        container_name: kafka_zookeeper_integration
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        networks:
            - reviews-test

    broker-integration:
        image: confluentinc/cp-kafka
        restart: unless-stopped
        container_name: kafka_broker_integration
        depends_on:
            - zookeeper-integration
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper-integration:2181"
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, PLAINTEXT_INTERNAL:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-integration:9092,PLAINTEXT_INTERNAL://broker-integration:29092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
            KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        networks:
            - reviews-test

    integration-test:
        build:
            context: ../../
            dockerfile: apps/reviews-api/Dockerfile.integration
        environment:
            - DATABASE_URL=postgres://syntax:stamford@postgres-integration:5432/coursecompose-integration
            - PRISMA_PROVIDER=go run github.com/steebchen/prisma-client-go
            - PRISMA_OUTPUT=/review-app-integration/review/data/datasource/db
            - JWT_SECRET=test-jwt-token
        depends_on:
            - postgres-integration
            - broker-integration
        networks:
            - reviews-test
